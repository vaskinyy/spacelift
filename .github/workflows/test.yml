name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '15'

    - name: Install
      run: npm install
      working-directory: ./app

    - name: Lint
      run: npm run lint
      working-directory: ./app

    - name: Test
      run: npm test
      working-directory: ./app

#    - name: Build
#      run: docker build --tag spacelift .
#
#    - name: Push to ECR
#      id: ecr
#      uses: jwalton/gh-ecr-push@v1
#      with:
#        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        region: eu-west-2
#        local-image: spacelift
#        image: spacelift:dev-${{ github.sha }}
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-west-2
#
#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: Update the stack
#      run: |
#        aws cloudformation update-stack --stack-name SpaceliftServiceDeployment --use-previous-template --parameters ParameterKey=Image,ParameterValue='${{ steps.ecr.outputs.imageUrl }}'
#
#    - name: Wait for the update to complete
#      run: |
#        aws cloudformation wait stack-update-complete --stack-name SpaceliftServiceDeployment
