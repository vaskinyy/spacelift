name: Deploy

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: docker build --tag spacelift .

    - name: Push to ECR
      id: ecr
      uses: jwalton/gh-ecr-push@v1
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: eu-west-2
        local-image: spacelift
        image: spacelift:dev-${{ github.sha }}

    - name: Get image ID
      id: getId
      uses: actions/github-script@0.9.0
      with:
        script: |
          console.log(context)
          const id = ${{ steps.ecr.outputs.imageUrl }}.replace(/^https?:\/\//,'')
          core.setOutput('imageId', id)

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update the stack
      run: |
        aws cloudformation update-stack --stack-name SpaceliftServiceDeployment --use-previous-template --parameters ParameterKey=Image,ParameterValue='${{ steps.getId.outputs.imageUrl }}'

    - name: Wait for the update to complete
      run: |
        aws cloudformation wait stack-update-complete --stack-name SpaceliftServiceDeployment
