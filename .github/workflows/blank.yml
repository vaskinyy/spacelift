name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
#    - uses: actions/setup-node@v2
#      with:
#        node-version: '15'
#    - name: Install
#      run: npm install
#      working-directory: ./app
#    - name: Lint
#      run: npm run lint
#      working-directory: ./app
#    - name: Test
#      run: npm test
#      working-directory: ./app
#    - name: Build
#      run: docker build --tag spacelift .
#    - name: Push to ECR
#      id: ecr
#      uses: jwalton/gh-ecr-push@v1
#      with:
#        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        region: eu-west-2
#        local-image: spacelift
#        image: spacelift:dev-${{ github.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update the stack
      run: |
        aws cloudformation update-stack --stack-name SpaceliftServiceDeployment --use-previous-template --parameters ParameterKey=Image,ParameterValue='150036471084.dkr.ecr.eu-west-2.amazonaws.com/spacelift:dev-24ce50e5b1ac2ea4f7bbe4ccd4c0bf906c60340a'

    - name: Wait for the update to complete
      run: |
        aws cloudformation wait stack-update-complete --stack-name SpaceliftServiceDeployment



#    - name: Download task definition
#      run: |
#        aws ecs describe-task-definition --task-definition spacelift-task --query taskDefinition > task-definition.json
#
#    - name: Fill in the new image ID in the Amazon ECS task definition
#      id: task-def
#      uses: aws-actions/amazon-ecs-render-task-definition@v1
#      with:
#        task-definition: task-definition.json
#        container-name: spacelift-task
#        image: ${{ steps.ecr.outputs.imageUrl }}
#
#    - name: Deploy Amazon ECS task definition
#      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#      with:
#        task-definition: ${{ steps.task-def.outputs.task-definition }}
#        service: spacelift-service
#        cluster: spacelift-cluster
